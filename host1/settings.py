"""
Django settings for webapp1 project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
#
# * 設定ファイルを `host1/webapp1/settings.py` から `host1/settings.py` へ移動する
# * 以下を削除
# BASE_DIR = Path(__file__).resolve().parent.parent
#                                     -------------
#                                     1
# 1. 例えば `host1/webapp1/settings.py` ファイルから見て
#    .resolve()               は `code/webapp1/settings.py` （`host1` は見えず `code` に差し変わっている）
#    .resolve().parent        は `code/webapp1/`
#    .resolve().parent.parent は `code/`
#
# * 以下を追加
BASE_DIR = Path(__file__).resolve().parent
#                                   ------
#                                   1
# 1. 例えば `host1/settings.py` ファイルから見て
#    .resolve()               は `code/settings.py` （`host1` は見えず `code` に差し変わっている）
#    .resolve().parent        は `code/`
#
# print(f"Path(__file__).resolve()={Path(__file__).resolve()}")
# print(f"Path(__file__).resolve().parent={Path(__file__).resolve().parent}")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zi^6=@s652)x3roh+^2c+f8mx*oap#em#)l%(#i*b+e5hei$dq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# さくらVPSを借りたりしたときは、ここにホストを設定すると 外からアクセスできる
ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # あなたが追加したアプリケーション
    'apps1.tic_tac_toe',
    'webapp1',

    # Djangoの標準アプリケーション
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 追加 allauth
    'django.contrib.sites',  # 追加
    'allauth',  # 追加
    'allauth.account',  # 追加
    'allauth.socialaccount',  # 追加

    # （追加） For web socket
    'channels',

    # （追加） For gRPC
    'django_grpc_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# * 以下を削除
# ROOT_URLCONF = 'webapp1.urls'
#                 ------------
#                 1
# 1. host1/webapp/urls.py
#          -----------
#
# * 以下を追加
ROOT_URLCONF = 'urls'
#               ----
#               1
# 1. host1/urls.py
#          ----
#    トップフォルダーの urls.py を指定する

# 調べ終わったら消す
print(
    f"[settings.py] os.path.join(BASE_DIR, 'webapp1', 'templates')={os.path.join(BASE_DIR, 'webapp1', 'templates')}")
# Example: `/webapp1/templates`
# Example: `/code/webapp1/templates`

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # 'DIRS' 配列には全く指定しないか、１つでも指定するなら デフォルトのテンプレート フォルダーを含めるようにしてください

            # +----
            # | My project templates

            os.path.join(BASE_DIR, 'webapp1', 'templates', 'webapp1'),
            #            --------   -------    ---------    -------
            #            1          2          3            4
            #
            # Example: /code/webapp1/templates/webapp1
            #          ----- ------- --------- -------
            #          1     2       3         4
            #
            # 1. 開発環境によってパスが変わることに注意してください。 2. 3. も適宜 設定してください
            # 2. 自アプリケーション フォルダー
            # 3. テンプレート フォルダー
            # 4. 自アプリケーション フォルダーと同名のフォルダー。 他のアプリケーションのテンプレートと共存したい場合に置いてください

            # | My project templates
            # +----

            # +----
            # | allauth

            os.path.join(BASE_DIR, 'webapp1', 'templates',
                         # ------   -------    ---------
                         # 1        2          3
                         'allauth-customized', 'v1'),
            #             -------------------------
            #             4
            #
            # Example: /code/webapp1/templates/allauth-customized/v1
            #          ----- ------- --------- ---------------------
            #          1     2       3         4
            #
            # 1. 開発環境によってパスが変わることに注意してください。 2. 3. も適宜 設定してください
            # 2. 自アプリケーション フォルダー
            # 3. テンプレート フォルダー
            # 4. 別アプリケーションのフォルダー名、また任意でバージョン番号フォルダー

            # | allauth
            # +----

            # +----
            # | 〇×ゲーム アプリケーション

            os.path.join(BASE_DIR, 'apps1', 'tic_tac_toe', 'templates'),
            #            --------   -----    -----------    ---------
            #            1          2        3              4
            #
            # Example: /host1/apps1/tic_tac_toe/templates/tic_tac_toe/v1o1/match_application.html
            #          ------ ----- ----------- ---------
            #          1      2     3           4
            #
            # 1. あなたの開発用ディレクトリー（例えば host1）が code に差し替わっています
            # 2. 開発用ディレクトリー
            # 3. アプリケーション フォルダー
            # 4. テンプレート フォルダー

            # | 〇×ゲーム アプリケーション
            # +----
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# （削除） WSGI_APPLICATION = 'webapp1.wsgi.application'
ASGI_APPLICATION = "webapp1.asgi.application"
#                   -------
#                   1
# 1. アプリケーション フォルダー名

# （追加） See also: 📖 [Django Channels and WebSockets](https://blog.logrocket.com/django-channels-and-websockets/)
CHANNEL_LAYERS = {
    'default': {
        # Method 1: Via redis lab
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',
        # 'CONFIG': {
        #     "hosts": [
        #       'redis://h:<password>;@<redis Endpoint>:<port>'
        #     ],
        # },

        # Method 2: Via local Redis
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',
        # 'CONFIG': {
        #      "hosts": [('127.0.0.1', 6379)],
        # },

        # Method 3: Via In-memory channel layer
        # Using this method.
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    },
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_NAME'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': 'db',
        'PORT': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Allauth
# https://sinyblog.com/django/django-allauth/

SITE_ID = 1  # 動かしているサイトを識別するID

# ログインしていないときに飛ばされる先。指定しないと '/accounts/login/'
LOGIN_URL = '/accounts/v1/login/'  # 慣れない内は URL で指定
# LOGIN_URL = 'login' # 慣れてくれば name で指定

# LOGIN_REDIRECT_URL = 'home'  # ログイン後に遷移するURLの指定
LOGIN_REDIRECT_URL = 'homeV1_home'  # ログイン後に遷移するURLの指定

# ログアウト後に遷移するURLの指定
#
# * レッスンの進捗に応じて変えてください
#
# ACCOUNT_LOGOUT_REDIRECT_URL = 'home' # レッスンの最初はこれ
# ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/v1/login/'
#                              -------------------
#                              1
# 1. 例えば `http://example.com/accounts/v1/login/` というパスにマッチする
#                             -------------------
ACCOUNT_LOGOUT_REDIRECT_URL = 'homeV1_home'

EMAIL_HOST = 'smtp.gmail.com'  # メールサーバの指定
EMAIL_PORT = 587  # ポート番号の指定
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # メールサーバのGmailのアドレス
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # メールサーバのGmailのパスワード
EMAIL_USE_TLS = True  # TLSの設定（TRUE,FALSE)
